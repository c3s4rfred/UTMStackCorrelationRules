- name: "AWS IAM Assume Role Policy Update"
  severity: "Low"
  description: "Identifies attempts to modify an AWS IAM Assume Role Policy. An adversary may attempt to modify the AssumeRolePolicy of a misconfigured role in order to gain the privileges of that role"
  solution: "Applications and appliances that utilize default username and password should be changed immediately after the installation, and before deployment to a production environment. When possible, applications that use SSH keys should be updated periodically and properly secured. Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers."
  category: "Valid Accounts"
  tactic: "Privilege Escalation"
  dataTypes: ["aws"]
  reference:
    - "https://attack.mitre.org/tactics/TA0004/"
    - "https://attack.mitre.org/techniques/T1078/"
    - "https://labs.bishopfox.com/tech-blog/5-privesc-attack-vectors-in-aws"
  frequency: 60
  cache:
    - allOf:
        - field: "logx.aws.cloudtrail.eventSource"
          operator: "=="
          value: "iam.amazonaws.com"
        - field: "logx.aws.cloudtrail.eventName"
          operator: "=="
          value: "UpdateAssumeRolePolicy"
        - field: "logx.aws.cloudtrail.errorCode"
          operator: "not exist"
          value:
        - field: "logx.aws.cloudtrail.errorMessage"
          operator: "not exist"
          value:
      timeLapse: 60
      minCount: 1
      save:
        - field: logx.aws.cloudtrail.sourceIPAddress
          alias: SourceIP
        - field: logx.aws.cloudtrail.userIdentity.userName
          alias: SourceUser
