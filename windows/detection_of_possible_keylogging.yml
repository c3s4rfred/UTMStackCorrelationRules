# Rule version v1.0.2

- name: "Windows: PowerShell Keylogging Script"
  severity: "High"
  description: "Detects the use of Win32 API Functions that can be used to capture user keystrokes in PowerShell scripts.
                Attackers use this technique to capture user input, looking for credentials and/or other valuable data."
  solution: "Isolate the involved hosts to prevent further post-compromise behavior.
      Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
      identified. Reset passwords for these accounts and other potentially compromised credentials.
      Run a full anti-malware scan. This can reveal additional artifacts left in the system, persistence mechanisms, and malware components.
      Determine the initial vector abused by the attacker and take steps to prevent re-infection via the same vector."
  category: "Collection"
  tactic: "Keylogging"
  dataTypes: ["wineventlog"]
  reference:
    - "https://attack.mitre.org/tactics/TA0009/"
    - "https://attack.mitre.org/techniques/T1056/"
    - "https://attack.mitre.org/techniques/T1056/001/"
  frequency: 60
  cache: 
    - allOf:
        - field: "logx.wineventlog.message"
          operator: "regexp"
          value: "(GetAsyncKeyState|NtUserGetAsyncKeyState|GetKeyboardState|Get-Keystrokes|SetWindowsHookA|SetWindowsHookW|SetWindowsHookEx|SetWindowsHookExA|NtUserSetWindowsHookEx|GetForegroundWindow|GetWindowTextA|GetWindowTextW|WM_KEYBOARD_LL)"
      minCount: 1
      timeLapse: 60
      save:
        - field: "logx.wineventlog.event_data.SubjectUserName"
          alias: "SourceUser"
        - field: "logx.wineventlog.host.name"
          alias: "SourceHost"
        - field: "logx.wineventlog.host.ip.1"
          alias: "SourceIP"
        - field: "logx.wineventlog.event_data.IpPort"
          alias: "SourcePort"
        - field: "logx.wineventlog.event_data.TargetUserName"
          alias: "DestinationUser"
