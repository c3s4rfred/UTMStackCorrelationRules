# Rule version v1.0.2

- name: "Windows: PowerShell MiniDump Script"
  severity: "High"
  description: "This rule detects PowerShell scripts capable of dumping process memory using WindowsErrorReporting or
                Dbghelp.dll MiniDumpWriteDump. Attackers can use this tooling to dump LSASS and get access to credentials."
  solution: "Isolate the involved hosts to prevent further post-compromise behavior.
      Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
      identified. Reset passwords for these accounts and other potentially compromised credentials.
      Run a full anti-malware scan. This can reveal additional artifacts left in the system, persistence mechanisms, and malware components.
      Determine the initial vector abused by the attacker and take measures to avoid reinfection through the same vector."
  category: "Credential Access"
  tactic: "PowerShell"
  dataTypes: ["wineventlog"]
  reference:
    - "https://attack.mitre.org/tactics/TA0006/"
    - "https://attack.mitre.org/techniques/T1059/001/"
  frequency: 60
  cache: 
    - allOf:
        - field: "logx.wineventlog.message"
          operator: "regexp"
          value: "(MiniDumpWriteDump|MiniDumpWithFullMemory|pmuDetirWpmuDiniM)"
      minCount: 1
      timeLapse: 60
      save:
        - field: "logx.wineventlog.event_data.SubjectUserName"
          alias: "SourceUser"
        - field: "logx.wineventlog.host.name"
          alias: "SourceHost"
        - field: "logx.wineventlog.host.ip.1"
          alias: "SourceIP"
        - field: "logx.wineventlog.event_data.IpPort"
          alias: "SourcePort"
        - field: "logx.wineventlog.event_data.TargetUserName"
          alias: "DestinationUser"
