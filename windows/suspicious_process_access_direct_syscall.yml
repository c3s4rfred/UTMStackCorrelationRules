# Rule version v1.0.2

- name: "Windows: Suspicious Process Access via Direct System Call"
  severity: "High"
  description: "Identifies suspicious process access events from an unknown memory region. Endpoint security solutions usually hook
                userland Windows APIs in order to decide if the code that is being executed is malicious or not. It's possible to bypass
                hooked functions by writing malicious functions that call syscalls directly."
  solution: "Isolate the involved host to prevent further post-compromise behavior.
      If the triage identified malware, search the environment for additional compromised hosts.
      Implement temporary network rules, procedures, and segmentation to contain the malware.
      Stop suspicious processes. Immediately block the identified indicators of compromise (IoCs).
      Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that
      attackers could use to reinfect the system. Remove the malicious certificate from the root certificate store.
      Remove and block malicious artifacts identified during triage.
      Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.
      Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are
      identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.
      Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector."
  category: "Defense Evasion"
  tactic: "Process Injection"
  dataTypes: ["wineventlog"]
  reference:
    - "https://attack.mitre.org/tactics/TA0005/"
    - "https://attack.mitre.org/techniques/T1055/"
  frequency: 60
  cache: 
    - allOf:
        - field: "logx.wineventlog.event_id"
          operator: "=="
          value: 10
        - field: "logx.wineventlog.event_data.CallTrace"
          operator: "not regexp"
          value: "(:\\WINDOWS\\SYSTEM32\\ntdll.dll|:\\WINDOWS\\SysWOW64\\ntdll.dll|:\\Windows\\System32\\wow64cpu.dll|:\\WINDOWS\\System32\\wow64win.dll|:\\Windows\\System32\\win32u.dll)"
        - field: "logx.wineventlog.event_data.TargetImage"
          operator: "not regexp"
          value: "(:\\WINDOWS\\system32\\lsass.exe|:\\Program Files (x86)\\Malwarebytes Anti-Exploit\\mbae-svc.exe|:\\Program Files\\Cisco\\AMP\\(.+)\\sfc.exe|:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\(.+)\\msedgewebview2.exe|:\\Program Files\\Adobe\\Acrobat DC\\Acrobat\\(.+)\\AcroCEF.exe)"
        - field: "logx.wineventlog.event_data.ProcessName"
          operator: "not regexp"
          value: "(:\\Program Files\\Adobe\\Acrobat DC\\Acrobat\\Acrobat.exe|:\\Program Files (x86)\\World of Warcraft\\_classic_\\WowClassic.exe)"
      minCount: 1
      timeLapse: 60
      save:
        - field: "logx.wineventlog.event_data.SubjectUserName"
          alias: "SourceUser"
        - field: "logx.wineventlog.host.name"
          alias: "SourceHost"
        - field: "logx.wineventlog.host.ip.1"
          alias: "SourceIP"
        - field: "logx.wineventlog.event_data.IpPort"
          alias: "SourcePort"
        - field: "logx.wineventlog.event_data.TargetUserName"
          alias: "DestinationUser"
